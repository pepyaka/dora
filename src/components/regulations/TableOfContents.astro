---
import TableOfContentsList from "./TableOfContents/TableOfContentsList.astro";
import type { TocItem } from "@starlight/utils/generateToC";

export enum HeadingLevel {
	TITLE = 1,
	Chapter = 2,
	Section = 3,
	Article = 4,
}

export type ExtTocItem = {
	headingLevel: HeadingLevel;
	offset: number;
	slug: string;
	text: string;
	children: ExtTocItem[];
};

const { toc, entry } = Astro.locals.starlightRoute;

const articleNumber = entry.data.regulation?.pageArticleStart || 0;

export function genExtTocItems(
	tocItems: TocItem[] = [],
	articleNumber: number,
): ExtTocItem[] {
	function enumerateRegParts(tocItems: TocItem[]): ExtTocItem[] {
		return tocItems.map(({ depth, children, slug, text }, n) => {
			let offset;
			// depth == 4 is Article depth
			if (depth === 4) {
				offset = articleNumber;
				articleNumber += 1;
			} else {
				offset = n + 1;
			}
			return {
				headingLevel: depth,
				offset,
				slug,
				text,
				children: enumerateRegParts(children),
			};
		});
	}

	if (tocItems.length > 1) {
		return enumerateRegParts(tocItems.slice(1));
	} else {
		return enumerateRegParts(tocItems[0].children);
	}
}

const extTocItems = genExtTocItems(toc?.items, articleNumber);
---

{
	toc && (
		<starlight-toc
			data-min-h={toc.minHeadingLevel}
			data-max-h={toc.maxHeadingLevel}
		>
			<nav aria-labelledby="starlight__on-this-page">
				<h2 id="starlight__on-this-page">
					{Astro.locals.t("tableOfContents.onThisPage")}
				</h2>
				<TableOfContentsList {extTocItems} />
			</nav>
		</starlight-toc>
	)
}

<script src="@starlight/components/TableOfContents/starlight-toc"></script>
